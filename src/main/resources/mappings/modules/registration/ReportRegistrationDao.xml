<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sayee.sxsy.modules.registration.dao.ReportRegistrationDao">

	<sql id="reportRegistrationColumns">
		if(a.report_registration_id IS NULL,d.complaint_main_detail_id,a.report_registration_id) AS "reportRegistrationId",
		if(a.complaint_main_id IS NULL,d.complaint_main_id,a.complaint_main_id) AS "complaintMainId",
		if(a.report_emp IS NULL,d.visitor_name,a.report_emp) AS "reportEmp",
		if(a.patient_mobile IS NULL,d.visitor_mobile,a.patient_mobile) AS "patientMobile",
		if(a.patient_relation IS NULL,d.patient_relation,a.patient_relation) AS "patientRelation",
		if(a.report_time IS NULL,d.visitor_date,a.report_time) AS "reportTime",
		if(a.registration_emp IS NULL,d.reception_employee,a.registration_emp) AS "registrationEmp",
		if(a.registration_time IS NULL,d.reception_date,a.registration_time )AS "registrationTime",
		a.dispute_time AS "disputeTime",
		if(a.is_major IS NULL,d.is_major,a.is_major )AS "isMajor",
		if(a.summary_of_disputes IS NULL,d.summary_of_disputes,a.summary_of_disputes)AS "summaryOfDisputes",
		a.focus AS "focus",
		a.patient_ask AS "patientAsk",
		a.next_link AS "nextLink",
		a.next_link_man AS "nextLinkMan",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		b.case_number AS "complaintMain.caseNumber",
		b.patient_name AS "complaintMain.patientName",
		b.patient_sex AS "complaintMain.patientSex",
		b.patient_age AS "complaintMain.patientAge",
		b.patient_card AS "complaintMain.patientCard",
		b.involve_hospital AS "complaintMain.involveHospital",
		b.hospital_level AS "complaintMain.hospitalLevel",
		b.hospital_grade AS "complaintMain.hospitalGrade",
		b.involve_department AS "complaintMain.involveDepartment",
		b.involve_employee AS "complaintMain.involveEmployee",
		b.proc_ins_id AS "complaintMain.procInsId",
		sa.name AS "area.name",
		u.name AS "djEmployee.name",
		o.name AS "complaintMain.hospital.name",
		o1.name AS "complaintMain.department.name",
		u1.name AS "complaintMain.employee.name",
		u2.name AS "linkEmployee.name",
		t.ID_ AS "complaintMain.act.taskId",
		t1.FILE_PATH AS "files"
	</sql>

	<sql id="reportRegistrationJoins">
		LEFT JOIN REPORT_REGISTRATION a ON a.complaint_main_id = b.complaint_main_id
		LEFT JOIN COMPLAINT_MAIN_DETAIL d on d.complaint_main_id=b.complaint_main_id
		LEFT JOIN ACT_RU_TASK t on t.PROC_INST_ID_=b.PROC_INS_ID
		LEFT JOIN SYS_OFFICE o on o.id=b.involve_hospital
 		LEFT JOIN SYS_AREA sa ON sa.id=o.area_id
 		LEFT JOIN SYS_OFFICE o1 ON o1.id=b.involve_department
		LEFT JOIN SYS_USER u1 ON u1.id=b.involve_employee
		LEFT JOIN SYS_USER u ON u.id=a.registration_emp
		LEFT JOIN SYS_USER u2 ON u2.id=a.next_link_man
		LEFT JOIN T_ACCESSORIES t1 ON  t1.ITEM_ID = a.report_registration_id
	</sql>

	<select id="get" resultType="ReportRegistration">
		SELECT
		<include refid="reportRegistrationColumns"/>
		FROM COMPLAINT_MAIN b
		<include refid="reportRegistrationJoins"/>
		WHERE a.report_registration_id = #{reportRegistrationId} OR  d.complaint_main_detail_id=#{reportRegistrationId}
	</select>

	<select id="findList" resultType="ReportRegistration">
		SELECT
		<include refid="reportRegistrationColumns"/>
		FROM COMPLAINT_MAIN b
		<include refid="reportRegistrationJoins"/>
		<where>
			if(a.del_flag IS NOT NULL,a.del_flag = #{DEL_FLAG_NORMAL},d.del_flag = #{DEL_FLAG_NORMAL})  AND b.PROC_INS_ID is NOT null and t.TASK_DEF_KEY_='enrollment'
			<if test="user != null and user.id != null and user.id != ''">
				AND (a.create_by LIKE
				<if test="dbName == 'oracle'">'%'||#{user.id}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{user.id}+'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{user.id}, '%')</if>
				OR t.ASSIGNEE_ LIKE CONCAT('%', #{user.loginName}, '%') )

			</if>
			<if test="reportEmp != null and reportEmp != ''">
				AND a.report_emp = #{reportEmp}
			</if>
			<if test="patientMobile != null and patientMobile != ''">
				AND a.patient_mobile = #{patientMobile}
			</if>
			<if test="reportTime != null and reportTime != ''">
				AND a.report_time LIKE
				<if test="dbName == 'oracle'">'%'||#{reportTime}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{reportTime}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{reportTime},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ReportRegistration">
		SELECT
		<include refid="reportRegistrationColumns"/>
		FROM REPORT_REGISTRATION a
		<include refid="reportRegistrationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO REPORT_REGISTRATION(
			report_registration_id,
			complaint_main_id,
			report_emp,
			patient_mobile,
			patient_relation,
			report_time,
			registration_emp,
			registration_time,
			dispute_time,
			is_major,
			summary_of_disputes,
			focus,
			patient_ask,
			next_link,
			next_link_man,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{reportRegistrationId},
			#{complaintMainId},
			#{reportEmp},
			#{patientMobile},
			#{patientRelation},
			#{reportTime},
			#{registrationEmp},
			#{registrationTime},
			#{disputeTime},
			#{isMajor},
			#{summaryOfDisputes},
			#{focus},
			#{patientAsk},
			#{nextLink},
			#{nextLinkMan},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE REPORT_REGISTRATION SET
			report_emp = #{reportEmp},
			patient_mobile = #{patientMobile},
			patient_relation = #{patientRelation},
			report_time = #{reportTime},
			registration_emp = #{registrationEmp},
			registration_time = #{registrationTime},
			dispute_time = #{disputeTime},
			is_major = #{isMajor},
			summary_of_disputes = #{summaryOfDisputes},
			focus = #{focus},
			patient_ask = #{patientAsk},
			next_link = #{nextLink},
			next_link_man = #{nextLinkMan},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE report_registration_id = #{reportRegistrationId}
	</update>

	<update id="delete">
		UPDATE REPORT_REGISTRATION SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE report_registration_id = #{reportRegistrationId}
	</update>

</mapper>