<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sayee.sxsy.modules.complaintmain.dao.ComplaintMainDao">

	<sql id="complaintMainColumns">
		a.complaint_main_id AS "complaintMainId",
		a.case_number AS "caseNumber",
		a.patient_name AS "patientName",
		a.patient_sex AS "patientSex",
		a.patient_age AS "patientAge",
		a.patient_card AS "patientCard",
		a.patient_mobile AS "patientMobile",
		a.involve_hospital AS "involveHospital",
		a.hospital_level AS "hospitalLevel",
		a.hospital_grade AS "hospitalGrade",
		a.involve_department AS "involveDepartment",
		a.involve_employee AS "involveEmployee",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createById",
		a.create_date AS "createDate",
		a.update_by AS "updateById",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.source AS  "source",
		o.name AS "hospital.name",
		o1.name AS "department.name",
		u.name AS "employee.name",
		group_concat(DISTINCT(te.name))AS "testTree"
	</sql>

	<sql id="complaintMainJoins">
		  LEFT JOIN SYS_OFFICE o ON o.id=a.involve_hospital
		  LEFT JOIN SYS_OFFICE o1 ON o1.id=a.involve_department
		  LEFT JOIN SYS_USER u ON u.id=a.involve_employee
		  LEFT JOIN TEST_TREE te ON INSTR(a.involve_department,te.id)>0 and length(te.id)=32
	</sql>

	<select id="get" resultType="ComplaintMain">
		SELECT
		<include refid="complaintMainColumns"/>
		FROM COMPLAINT_MAIN a
		<include refid="complaintMainJoins"/>
		WHERE a.complaint_main_id = #{complaintMainId}
	</select>

	<select id="getRepeat" resultType="ComplaintMain">
		SELECT
		<include refid="complaintMainColumns"/>
		FROM COMPLAINT_MAIN a
		<include refid="complaintMainJoins"/>
		WHERE a.patient_card=#{patientCard} and a.involve_hospital=#{involveHospital} and a.complaint_main_id != #{complaintMainId}and a.DEL_FLAG=0
		GROUP BY a.COMPLAINT_MAIN_ID
	</select>

	<select id="findList" resultType="ComplaintMain">
		SELECT
		<include refid="complaintMainColumns"/>
		FROM COMPLAINT_MAIN a
		<include refid="complaintMainJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="caseNumber != null and caseNumber != ''">
				AND a.case_number = #{caseNumber}
			</if>
			<if test="patientName != null and patientName != ''">
				AND a.patient_name = #{patientName}
			</if>
			<if test="involveHospital != null and involveHospital != ''">
				AND a.involve_hospital = #{involveHospital}
			</if>
			<if test="involveDepartment != null and involveDepartment != ''">
				AND a.involve_department = #{involveDepartment}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="rootFindUserId" resultType="String">
		select u.LOGIN_NAME from SYS_OFFICE o LEFT JOIN SYS_USER u on u.OFFICE_ID = o.ID where o.OFFICE_TYPE = '1';
	</select>

	<select id="findAllList" resultType="ComplaintMain">
		SELECT
		<include refid="complaintMainColumns"/>
		FROM COMPLAINT_MAIN a
		<include refid="complaintMainJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO COMPLAINT_MAIN(
		complaint_main_id,
		case_number,
		patient_name,
		patient_sex,
		patient_age,
		patient_card,
		patient_mobile,
		involve_hospital,
		hospital_level,
		hospital_grade,
		involve_department,
		involve_employee,
		proc_ins_id,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag,
		source
		) VALUES (
		#{complaintMainId},
		#{caseNumber},
		#{patientName},
		#{patientSex},
		#{patientAge},
		#{patientCard},
		#{patientMobile},
		#{involveHospital},
		#{hospitalLevel},
		#{hospitalGrade},
		#{involveDepartment},
		#{involveEmployee},
		#{procInsId},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{delFlag},
		#{source}
		)
	</insert>

	<update id="update">
		UPDATE COMPLAINT_MAIN SET
		case_number = #{caseNumber},
		patient_name = #{patientName},
		patient_sex = #{patientSex},
		patient_age = #{patientAge},
		patient_card = #{patientCard},
		patient_mobile = #{patientMobile},
		involve_hospital = #{involveHospital},
		hospital_level = #{hospitalLevel},
		hospital_grade = #{hospitalGrade},
		involve_department = #{involveDepartment},
		involve_employee = #{involveEmployee},
		update_date = #{updateDate}
		WHERE complaint_main_id = #{complaintMainId}
	</update>

	<update id="delete">
		UPDATE COMPLAINT_MAIN SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE complaint_main_id = #{complaintMainId}
	</update>

	<select id="findCount" resultType="Long">
		SELECT
		count(DISTINCT(PROC_INST_ID_))
		FROM ACT_HI_TASKINST a
		RIGHT JOIN COMPLAINT_MAIN c on c.PROC_INS_ID=a.PROC_INST_ID_
		<choose>
			<when test="loginName != null and loginName != ''">
				WHERE a.ASSIGNEE_ = #{loginName}  AND (a.DELETE_REASON_ IS NULL or a.END_TIME_ IS NULL or a.DURATION_ IS NULL)
			</when>
			<otherwise>
				WHERE 1=2
			</otherwise>
		</choose>
	</select>


	<select id="selfList" resultType="ComplaintMain">
		SELECT
		c.complaint_main_id AS "complaintMainId",
		c.case_number AS "caseNumber",
		c.patient_name AS "patientName",
		c.patient_sex AS "patientSex",
		c.patient_age AS "patientAge",
		c.patient_card AS "patientCard",
		c.patient_mobile AS "patientMobile",
		c.involve_hospital AS "involveHospital",
		c.hospital_level AS "hospitalLevel",
		c.hospital_grade AS "hospitalGrade",
		c.involve_department AS "involveDepartment",
		c.involve_employee AS "involveEmployee",
		c.proc_ins_id AS "procInsId",
		c.create_by AS "createById",
		c.create_date AS "createDate",
		c.update_by AS "updateById",
		c.update_date AS "updateDate",
		c.del_flag AS "delFlag",
		o.name AS "hospital.name",
		o1.name AS "department.name",
		u.name AS "employee.name",
		a.TASK_DEF_KEY_ AS "taskDefKey",
		a.NAME_ AS "nodeName"
		FROM ACT_HI_TASKINST a
		RIGHT JOIN COMPLAINT_MAIN c on c.PROC_INS_ID=a.PROC_INST_ID_
		LEFT JOIN SYS_OFFICE o ON o.id=c.involve_hospital
		LEFT JOIN SYS_OFFICE o1 ON o1.id=c.involve_department
		LEFT JOIN SYS_USER u ON u.id=c.involve_employee
		<choose>
			<when test="loginName != null and loginName != ''">
				WHERE a.ASSIGNEE_ = #{loginName} AND (a.DELETE_REASON_ IS NULL or a.END_TIME_ IS NULL or a.DURATION_ IS NULL)
				GROUP BY a.PROC_INST_ID_
			</when>
			<otherwise>
				WHERE 1=2
			</otherwise>
		</choose>
	</select>

	<select id="getMachine"  resultType="ComplaintMain">
		SELECT
		a.complaint_main_id AS "complaintMainId",
		a.patient_name AS "patientName",
		a.case_number AS "caseNumber",
		o4.name AS "hospital.name",
		t.NAME_ AS "nodeName",
		t.TASK_DEF_KEY_ AS "taskDefKey",
		t.ASSIGNEE_ AS "assignee",
		a.create_date AS "createDate"
		FROM MACHINE_ACCOUNT a
		LEFT JOIN SYS_OFFICE o4 ON o4.id = a.hospital_id
		LEFT JOIN SYS_AREA sa ON sa.id = o4.area_id
		LEFT JOIN COMPLAINT_MAIN c on c.complaint_main_id=a.complaint_main_id
		LEFT JOIN ACT_RU_TASK t on t.PROC_INST_ID_=c.PROC_INS_ID
		<where>
			a.del_flag = 0 and a.case_number is not null and a.case_number!=''
			<if test="reportingTime != null and reportingTime != '' or  endReportingTime != null and endReportingTime != ''">
				AND (a.reporting_time BETWEEN #{reportingTime} AND #{endReportingTime})
			</if>
			<if test="areaId !=null and areaId !=''">
				AND sa.parent_id like concat('%',#{areaId},'%') or sa.id= #{areaId}
			</if>
			<if test="hospitalId != null and hospitalId != ''">
				AND a.hospital_id LIKE concat('%',#{hospitalId},'%')
			</if>
		</where>
		limit 0,10
	</select>


	<select id="getKey" resultType="java.lang.String">
		SELECT ${key}  FROM
		${table}
		WHERE complaint_main_id = #{complaintMainId} AND del_flag =0
		<if test="table =='INVESTIGATE_EVIDENCE'">
			AND investigate_type='1'
		</if>
	</select>

	<select id="getMain" resultType="ComplaintMain">
		SELECT
		<include refid="complaintMainColumns"/>
		,
		c.TASK_DEF_KEY_ AS "taskDefKey",
		c.NAME_ AS "nodeName"
		FROM COMPLAINT_MAIN a
		<include refid="complaintMainJoins"/>
		LEFT JOIN ACT_HI_TASKINST c on a.PROC_INS_ID=c.PROC_INST_ID_
		WHERE a.proc_ins_id = #{ins}
	</select>

	<select id="getMyDone" resultType="ComplaintMain">
		SELECT
		c.complaint_main_id AS "complaintMainId",
		c.case_number AS "caseNumber",
		c.patient_name AS "patientName",
		c.patient_sex AS "patientSex",
		c.patient_age AS "patientAge",
		c.patient_card AS "patientCard",
		c.patient_mobile AS "patientMobile",
		c.involve_hospital AS "involveHospital",
		c.hospital_level AS "hospitalLevel",
		c.hospital_grade AS "hospitalGrade",
		c.involve_department AS "involveDepartment",
		c.involve_employee AS "involveEmployee",
		c.proc_ins_id AS "procInsId",
		c.create_by AS "createById",
		c.create_date AS "createDate",
		c.update_by AS "updateById",
		c.update_date AS "updateDate",
		c.del_flag AS "delFlag",
		t.TASK_DEF_KEY_ AS "taskDefKey",
		t.NAME_ AS "nodeName"
		FROM COMPLAINT_MAIN c
		<choose>
			<when test="loginName != null and loginName != ''">
				RIGHT JOIN (SELECT * FROM ACT_HI_TASKINST WHERE ASSIGNEE_= #{loginName} AND (END_TIME_ IS NOT NULL AND END_TIME_ !='') GROUP BY PROC_INST_ID_) aa ON c.PROC_INS_ID=aa.PROC_INST_ID_
				LEFT JOIN (SELECT PROC_INST_ID_,NAME_,TASK_DEF_KEY_ FROM (SELECT * FROM ACT_HI_TASKINST WHERE ASSIGNEE_= #{loginName} ORDER BY START_TIME_ DESC ) tt GROUP BY  tt.PROC_INST_ID_ ORDER BY tt.START_TIME_   ) t on t.PROC_INST_ID_=aa.PROC_INST_ID_
				LEFT JOIN (SELECT PROC_INST_ID_ FROM ACT_HI_IDENTITYLINK where USER_ID_ = #{loginName} GROUP BY PROC_INST_ID_) a on a.PROC_INST_ID_=aa.PROC_INST_ID_
				WHERE c.COMPLAINT_MAIN_ID IS NOT NULL
			</when>
			<otherwise>
				where 1=2
			</otherwise>
		</choose>

	</select>

	<!--主任查看的(投诉数量统计)案件分类统计-->
	<select id="findTypeInfo" resultType="java.util.Map">
		SELECT CONCAT('\'',t.name,'\'') typeName,COUNT(t.name) num,CONCAT('\'',t.id,'\'') typeId
		FROM COMPLAINT_MAIN_DETAIL c
		LEFT JOIN TEST_TREE t on c.is_major=t.id
		LEFT JOIN COMPLAINT_MAIN cc on c.complaint_main_id=cc.complaint_main_id
		WHERE t.name is not null
		<choose>
			<when test="year !=null and year !=''">
				AND c.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND c.visitor_date <![CDATA[ >= ]]> #{beginMonthDate} AND c.visitor_date <![CDATA[ <= ]]> #{endMonthDate}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND c.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND cc.involve_hospital = #{officeId}
		</if>
		GROUP BY t.name
	</select>

	<!--主任查看的(调解数量统计)案件分类统计-->
	<select id="findTypeInfoTj" resultType="java.util.Map">
		SELECT CONCAT('\'',t.name,'\'') typeName,COUNT(t.name) num,CONCAT('\'',t.id,'\'') typeId
		FROM AUDIT_ACCEPTANCE aa
		LEFT JOIN COMPLAINT_MAIN_DETAIL c on aa.complaint_main_id=c.complaint_main_id
		LEFT JOIN COMPLAINT_MAIN cc on aa.complaint_main_id=cc.complaint_main_id
		LEFT JOIN TEST_TREE t on c.is_major=t.id
		LEFT JOIN SYS_OFFICE o on cc.involve_hospital = o.id
		LEFT JOIN SYS_AREA a on o.area_id = a.id
		WHERE t.name is not null
		<choose>
			<when test="year !=null and year !=''">
				AND aa.create_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND aa.create_date <![CDATA[ >= ]]> #{beginMonthDate} AND aa.create_date <![CDATA[ <= ]]> #{endMonthDate}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND aa.create_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND aa.create_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND aa.create_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND a.parent_id like concat('%',#{officeId},'%') or a.id= #{officeId}
		</if>
		GROUP BY t.name
	</select>

	<select id="findGrade" resultType="java.util.Map">
		SELECT CONCAT(if(cc.hospital_grade='1','三级甲等',if(cc.hospital_grade='2','三级乙等',if(cc.hospital_grade='3','二级甲等',if(cc.hospital_grade='4','二级乙等',if(cc.hospital_grade='5','乡镇卫生院',if(cc.hospital_grade='6','社区服务站',if(cc.hospital_grade='7','民营医院',if(cc.hospital_grade='8','门诊',''))))))))) name,COUNT(cc.hospital_grade) value
		FROM COMPLAINT_MAIN_DETAIL c
		LEFT JOIN COMPLAINT_MAIN cc ON cc.complaint_main_id=c.complaint_main_id
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				c.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				c.visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR}  AND c.visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				c.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND cc.involve_hospital = #{officeId}
		</if>
		AND cc.hospital_grade is NOT NULL AND cc.hospital_grade !=''
		GROUP BY cc.hospital_grade
	</select>

	<select id="findGradeTj" resultType="java.util.Map">
		SELECT CONCAT(if(cc.hospital_grade='1','三级甲等',if(cc.hospital_grade='2','三级乙等',if(cc.hospital_grade='3','二级甲等',if(cc.hospital_grade='4','二级乙等',if(cc.hospital_grade='5','乡镇卫生院',if(cc.hospital_grade='6','社区服务站',if(cc.hospital_grade='7','民营医院',if(cc.hospital_grade='8','门诊',''))))))))) name,COUNT(cc.hospital_grade) value
		FROM MACHINE_ACCOUNT c
		LEFT JOIN SYS_OFFICE cc ON cc.id=c.HOSPITAL_ID
		LEFT JOIN SYS_AREA sa ON cc.area_id = sa.id
		WHERE cc.hospital_grade is NOT NULL and cc.hospital_grade !=''
		<choose>
			<when test="year !=null and year !=''">
				AND c.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND c.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND  c.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND c.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND c.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND c.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.parent_id LIKE  concat('%',#{officeId},'%') or sa.id= #{officeId}
		</if>
		GROUP BY cc.hospital_grade
	</select>

	<select id="getEveryMonthData" resultType="java.util.Map">
		SELECT COUNT(visitor_date) num,CONCAT('\'',SUBSTRING_INDEX(visitor_date,'-',2),'\'') monthDate
		FROM COMPLAINT_MAIN_DETAIL c
		LEFT JOIN COMPLAINT_MAIN a on c.complaint_main_id=a.complaint_main_id
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND a.involve_hospital = #{officeId}
		</if>
		GROUP BY SUBSTRING_INDEX(visitor_date,'-',2)
	</select>

	<select id="getEveryMonthDataTj" resultType="java.util.Map">
		SELECT COUNT(reporting_time) num,CONCAT('\'',SUBSTRING_INDEX(reporting_time,'-',2),'\'') monthDate
		FROM MACHINE_ACCOUNT c
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND c.hospital_id = #{officeId}
		</if>
		GROUP BY SUBSTRING_INDEX(reporting_time,'-',2)
	</select>

	<select id="findAreaName" resultType="java.util.Map">
		SELECT  sa.`name` as name, count(*) as value
		FROM COMPLAINT_MAIN_DETAIL c
		LEFT JOIN COMPLAINT_MAIN a on c.complaint_main_id=a.complaint_main_id
		LEFT JOIN SYS_OFFICE o ON o.id = a.involve_hospital
		LEFT JOIN SYS_AREA sa ON sa.id = o.area_id
		WHERE a.del_flag ='0' AND sa.`name` IS NOT NULL
		<choose>
			<when test="year !=null and year !=''">
				AND c.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND c.visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND c.visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND c.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND a.involve_hospital = #{officeId}
		</if>
		GROUP BY sa.`name`
	</select>

	<select id="findAreaNameTj" resultType="java.util.Map">
		SELECT  sa.`name` as name, count(*) as value
		FROM MACHINE_ACCOUNT c
		LEFT JOIN SYS_OFFICE o ON o.id = c.hospital_id
		LEFT JOIN SYS_AREA sa ON sa.id = o.area_id
		WHERE  sa.`name` IS NOT NULL
		<choose>
			<when test="year !=null and year !=''">
				AND c.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND c.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND c.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND c.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND c.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND c.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.PARENT_ID LIKE CONCAT('%', #{officeId}, '%') or sa.id= #{officeId}

		</if>
		GROUP BY sa.`name`
	</select>

	<select id="findDepartment" resultType="java.util.Map">
		SELECT  concat('\'',t.`name`,'\'')  name, count(a.involve_department) as department
		FROM COMPLAINT_MAIN_DETAIL c
		LEFT JOIN COMPLAINT_MAIN a on c.complaint_main_id=a.complaint_main_id
		LEFT JOIN TEST_TREE t ON t.id = a.involve_department
		WHERE a.del_flag = '0' AND t.id is not null
		<choose>
			<when test="year !=null and year !=''">
				AND c.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND c.visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND c.visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND c.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND c.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND a.involve_hospital = #{officeId}
		</if>
		GROUP BY a.involve_department
		ORDER BY count(a.involve_department) ASC
	</select>

	<select id="findDepartmentTj" resultType="java.util.Map">
		SELECT concat('\'',IF(c.name is null or c.name='','无涉及专业',c.name),'\'') AS name,COUNT(1) AS department from(
		SELECT
		sa.paremt_id as 'pa',sa.id AS 'areaId',substring_index( substring_index( trim(REPLACE(REPLACE(a.related_major, CHAR(10), ''), CHAR(13), '')), ',', b.help_topic_id + 1 ), ',',- 1 ) NAME ,a.reporting_time,a.hospital_id
		FROM
		MACHINE_ACCOUNT a
		JOIN mysql.HELP_TOPIC b ON b.help_topic_id &lt;( length( a.related_major ) - length( REPLACE ( a.related_major, ',', '' ) ) + 1 )
		LEFT JOIN SYS_OFFICE so on a.hospital_id = so.id
		lEFT JOIN SYS_AREA sa on so.area_id = sa.id
		where a.del_flag ='0' AND sa.parent_id LIKE CONCAT('%f0e2fe4d03834d598121e5ff31abf1d1%') or sa.id= 'f0e2fe4d03834d598121e5ff31abf1d1'
		)c
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				c.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				c.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND c.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				c.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				c.reporting_time like concat('%',#{beginMonthDate},'%')
            </when>
            <otherwise>
                c.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			and c.areaId=#{officeId}
		</if>
		<if test="officeId !=null and officeId !=''">
			AND c.pa LIKE CONCAT('%', #{officeId}, '%') or c.areaId=#{officeId}
		</if>
		GROUP BY c.name
	</select>

	<select id="findDepartmentNewName" resultType="TestTree">
		select t.name from TEST_TREE t where t.id= #{newNameId} AND DEL_FLAG='0';
	</select>

	<select id="findCompleted" resultType="ComplaintMain">
		SELECT
		c.complaint_main_id AS "complaintMainId",
		c.case_number AS "caseNumber", c.patient_name AS "patientName",
		c.patient_sex AS "patientSex", c.patient_age AS "patientAge",
		c.patient_card AS "patientCard", c.patient_mobile AS "patientMobile",
		c.involve_hospital AS "involveHospital", c.hospital_level AS "hospitalLevel",
		c.hospital_grade AS "hospitalGrade", c.involve_department AS "involveDepartment",
		c.involve_employee AS "involveEmployee", c.proc_ins_id AS "procInsId",
		c.create_by AS "createById", c.create_date AS "createDate", c.update_by AS "updateById",
		c.update_date AS "updateDate", c.del_flag AS "delFlag", aa.TASK_DEF_KEY_ AS "taskDefKey",
		aa.NAME_ AS "nodeName" FROM (select PROC_INST_ID_,ASSIGNEE_
		FROM ACT_HI_TASKINST where TASK_DEF_KEY_ in ('assess','feedback','end')
		GROUP BY PROC_INST_ID_) a
		LEFT JOIN (select * from ACT_HI_TASKINST where END_TIME_ IS NULL or END_TIME_ ='')
		aa on a.PROC_INST_ID_=aa.PROC_INST_ID_
		LEFT JOIN COMPLAINT_MAIN c on c.PROC_INS_ID=aa.PROC_INST_ID_
		LEFT JOIN COMPLAINT_MAIN_DETAIL co on co.complaint_main_id=c.complaint_main_id
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				co.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				co.visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND co.visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				co.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				co.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				co.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND c.involve_hospital = #{officeId}
		</if>
		GROUP BY a.PROC_INST_ID_
	</select>

	<select id="findAllEvent" resultType="Long">
		SELECT count(DISTINCT(PROC_INST_ID_))
		FROM ACT_HI_TASKINST a
		RIGHT JOIN COMPLAINT_MAIN c on c.PROC_INS_ID=a.PROC_INST_ID_
		LEFT JOIN COMPLAINT_MAIN_DETAIL com ON com.complaint_main_id=c.complaint_main_id
		WHERE
		<choose>
			<when test="year !=null and year !=''">
				com.visitor_date like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				com.visitor_date &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND com.visitor_date &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				com.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				com.visitor_date like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				com.visitor_date like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND c.involve_hospital = #{officeId}
		</if>
	</select>

	<select id="findDutyTj" resultType="java.util.Map">
		SELECT aa.duty_ratio name,count(1) value
		FROM MACHINE_ACCOUNT aa
		LEFT JOIN SYS_OFFICE so on aa.hospital_id = so.id
		LEFT JOIN SYS_AREA sa on so.area_id = sa.id
		WHERE aa.duty_ratio is NOT null AND aa.duty_ratio !=''
		<choose>
			<when test="year !=null and year !=''">
				AND aa.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND aa.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND aa.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND aa.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND aa.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND aa.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.parent_id LIKE CONCAT('%', #{officeId}, '%') or sa.id= #{officeId}
		</if>
		GROUP BY LEFT(aa.duty_ratio,2)
	</select>


	<select id="findAmountRatioTj" resultType="java.util.LinkedHashMap">
		SELECT count(CASE WHEN IFNULL(s.agreement_amount, 0) &lt;=20000 THEN s.machine_account_id END ) '2万及以下',
		count(CASE WHEN IFNULL(s.agreement_amount, 0) &gt;20000 AND IFNULL(s.agreement_amount, 0) &lt;=100000 THEN s.machine_account_id END ) '2万到10万及以下',
		count(CASE WHEN IFNULL(s.agreement_amount, 0) >&gt;100000 AND IFNULL(s.agreement_amount, 0) &lt;=500000 THEN s.machine_account_id END ) '10万到50万及以下',
		count(CASE WHEN IFNULL(s.agreement_amount, 0) &gt;500000 THEN s.machine_account_id END ) '50万以上'
		FROM MACHINE_ACCOUNT s
		LEFT JOIN SYS_OFFICE so on s.hospital_id = so.id
		LEFT JOIN SYS_AREA sa on so.area_id = sa.id
		WHERE s.agreement_amount is not null
		<choose>
			<when test="year !=null and year !=''">
				AND s.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND s.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND s.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND s.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND s.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND s.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.parent_id LIKE CONCAT('%', #{officeId}, '%') or sa.id= #{officeId}
		</if>
	</select>
	<select id="findCityAmountRatio" resultType="java.util.Map">
		select sa.`name` as name, sum(m.AGREEMENT_AMOUNT) as value
		FROM MACHINE_ACCOUNT m
		LEFT JOIN SYS_OFFICE so on m.HOSPITAL_ID = so.id
		LEFT JOIN SYS_AREA sa on so.AREA_ID = sa.ID
		where m.AGREEMENT_AMOUNT is not null
		<choose>
			<when test="year !=null and year !=''">
				AND m.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND m.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND m.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND m.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND m.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND m.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.parent_id LIKE CONCAT('%', #{officeId}, '%') or sa.id= #{officeId}
		</if>
		GROUP BY name
	</select>

	<select id="findDepartmentAmountRatio" resultType="java.util.Map">
		select m.RELATED_MAJOR as name, sum(m.AGREEMENT_AMOUNT) as value
		FROM MACHINE_ACCOUNT m
		LEFT JOIN SYS_OFFICE so on m.HOSPITAL_ID = so.id
		LEFT JOIN SYS_AREA sa on so.AREA_ID = sa.ID
		where m.AGREEMENT_AMOUNT is not null
		<choose>
			<when test="year !=null and year !=''">
				AND m.reporting_time like concat('%',#{year},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate!=endMonthDate">
				AND m.reporting_time &gt;= #{beginMonthDate,jdbcType=VARCHAR} AND m.reporting_time &lt;= #{endMonthDate,jdbcType=VARCHAR}
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and endMonthDate !=null and endMonthDate !='' and beginMonthDate==endMonthDate">
				AND m.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<when test="beginMonthDate !=null and beginMonthDate !='' and (endMonthDate ==null or endMonthDate =='')">
				AND m.reporting_time like concat('%',#{beginMonthDate},'%')
			</when>
			<otherwise>
				AND m.reporting_time like concat('%',#{endMonthDate},'%')
			</otherwise>
		</choose>
		<if test="officeId !=null and officeId !=''">
			AND sa.parent_id LIKE CONCAT('%', #{officeId}, '%') or sa.id= #{officeId}
		</if>
		GROUP BY name
	</select>


</mapper>